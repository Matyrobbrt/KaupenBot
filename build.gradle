plugins {
    id 'java'
    id 'groovy'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}
repositories {
    mavenCentral()
    maven { url "https://m2.chew.pro/snapshots" }
}

sourceSets {
    modmail {}
    var ext = create('extension')
    main {
        compileClasspath += ext.output
        runtimeClasspath += ext.output
    }
    modmail {
        compileClasspath += ext.output
        runtimeClasspath += ext.output
    }
    var api = create('api')
    main {
        compileClasspath += api.output
        runtimeClasspath += api.output
    }
    modmail {
        compileClasspath += api.output
        runtimeClasspath += api.output
    }

    var common = create('common') {
        compileClasspath += api.output
        runtimeClasspath += api.output
        compileClasspath += ext.output
        runtimeClasspath += ext.output
    }
    modmail {
        compileClasspath += common.output
        runtimeClasspath += common.output
    }
    main {
        compileClasspath += common.output
        runtimeClasspath += common.output
        runtimeClasspath += modmail.output
    }
}
configurations {
    extensionImplementation.extendsFrom(implementation)
    apiImplementation.extendsFrom(implementation)
    commonImplementation.extendsFrom(implementation)
    modmailImplementation.extendsFrom(implementation)
    shade
    shade.extendsFrom(implementation)
}

application {
    mainClass = 'com.matyrobbrt.kaupenbot.Main'
}
tasks.named('run', JavaExec).configure {
    workingDir = new File('run')
}

dependencies {
    implementation libs.groovy
    implementation libs.groovy.nio

    implementation libs.jda
    implementation libs.jdahelper

    implementation libs.jdbi.core
    implementation libs.jdbi.sqlobject

    implementation libs.chewtils
    implementation libs.logback
    implementation libs.sqlite
    implementation libs.flyway
    implementation libs.dotenv
    implementation libs.webhooks
    implementation libs.configurate.hocon
    implementation libs.gson
    implementation libs.emoji

    compileOnly libs.annotations

    implementation 'com.typesafe:config:1.4.2'

    compileClasspath 'net.sf.trove4j:trove4j:3.0.3'
    commonCompileClasspath 'net.sf.trove4j:trove4j:3.0.3'
    modmailCompileClasspath 'net.sf.trove4j:trove4j:3.0.3'
    extensionCompileClasspath 'net.sf.trove4j:trove4j:3.0.3'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
tasks.withType(GroovyCompile).configureEach {
    it.groovyOptions.fork = true
    it.groovyOptions.encoding = 'UTF-8'
    it.groovyOptions.optimizationOptions.indy = true
}

shadowJar {
    configurations = [project.configurations.shade]
    manifest.attributes([
            'Main-Class': application.mainClassName,
            'Implementation-Version': project.version
    ])
    from sourceSets.api.output
    from sourceSets.extension.output
    from sourceSets.common.output
    from sourceSets.modmail.output
    classifier = ''
}